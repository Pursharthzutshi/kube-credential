name: Deploy Verification Service to AWS App Runner

on:
  push:
    branches:
      - main
    paths:
      - 'backend/verification-service/**'
      - '.github/workflows/deploy-verification-service.yml'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: verification-service
  APP_RUNNER_SERVICE: verification-service

jobs:
  deploy:
    name: Deploy to App Runner
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Create ECR repository if it doesn't exist
        run: |
          aws ecr describe-repositories --repository-names ${{ env.ECR_REPOSITORY }} --region ${{ env.AWS_REGION }} || \
          aws ecr create-repository \
            --repository-name ${{ env.ECR_REPOSITORY }} \
            --region ${{ env.AWS_REGION }} \
            --image-scanning-configuration scanOnPush=true

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd backend/verification-service
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Deploy to App Runner
        id: deploy-apprunner
        run: |
          aws apprunner update-service \
            --service-arn ${{ secrets.VERIFICATION_SERVICE_ARN }} \
            --source-configuration "ImageRepository={ImageIdentifier=${{ steps.build-image.outputs.image }},ImageRepositoryType=ECR,ImageConfiguration={Port=3000}}" \
            --region ${{ env.AWS_REGION }}

      - name: Wait for deployment
        run: |
          aws apprunner wait service-updated \
            --service-arn ${{ secrets.VERIFICATION_SERVICE_ARN }} \
            --region ${{ env.AWS_REGION }}

      - name: Get service URL
        run: |
          SERVICE_URL=$(aws apprunner describe-service \
            --service-arn ${{ secrets.VERIFICATION_SERVICE_ARN }} \
            --query 'Service.ServiceUrl' \
            --output text \
            --region ${{ env.AWS_REGION }})
          echo "Service URL: https://$SERVICE_URL"