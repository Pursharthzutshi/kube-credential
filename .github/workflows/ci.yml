name: Test and Build Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  # Frontend Tests
  frontend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run frontend tests
      run: npm run test:ci
    
    - name: Upload frontend coverage
      uses: codecov/codecov-action@v4
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  # Backend Issuance Service Tests
  issuance-service-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/issuance-service
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/issuance-service/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run issuance service tests
      run: npm run test:ci
    
    - name: Upload issuance service coverage
      uses: codecov/codecov-action@v4
      with:
        file: ./backend/issuance-service/coverage/lcov.info
        flags: issuance-service
        name: issuance-service-coverage

  # Backend Verification Service Tests
  verification-service-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/verification-service
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/verification-service/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run verification service tests
      run: npm run test:ci
    
    - name: Upload verification service coverage
      uses: codecov/codecov-action@v4
      with:
        file: ./backend/verification-service/coverage/lcov.info
        flags: verification-service
        name: verification-service-coverage

  # Build and Test Summary
  build-and-test:
    runs-on: ubuntu-latest
    needs: [frontend-tests, issuance-service-tests, verification-service-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Build frontend
      run: |
        cd frontend
        npm ci
        npm run build
    
    - name: Build issuance service
      run: |
        cd backend/issuance-service
        npm ci
        npm run build
    
    - name: Build verification service
      run: |
        cd backend/verification-service
        npm ci
        npm run build
    
    - name: Test Summary
      run: |
        echo "‚úÖ All tests passed successfully!"
        echo "üìä Frontend tests: PASSED"
        echo "üìä Issuance service tests: PASSED"
        echo "üìä Verification service tests: PASSED"
        echo "üèóÔ∏è All builds completed successfully!"

  # Security and Quality Checks
  security-checks:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
